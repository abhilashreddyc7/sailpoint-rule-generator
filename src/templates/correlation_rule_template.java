/*
 * Generated by AI-Driven SailPoint IIQ Rule Generator
 *
 * Rule Type: Correlation
 * Application: {{ application_name }}
 * Description: Correlate an incoming account with an existing identity.
 */

import sailpoint.object.Identity;
import sailpoint.object.QueryOptions;
import sailpoint.object.Filter;
import sailpoint.tools.Util;

import java.util.List;
import java.util.Map;
import java.util.HashMap;

// Note: 'link', 'context' are standard Correlation rule bindings in IIQ.
Map<String, Object> correlatedIdentity = null;

// --- Start Correlation Logic ---
{% for attr in source_attributes %}
{
    // Avoid putting attribute names into Java identifiers; keep them as strings.
    String rawValue = (String) link.getAttribute("{{ attr }}");
    String value = Util.isNotNullOrEmpty(rawValue) ? rawValue.trim() : null;

    if (Util.isNotNullOrEmpty(value)) {
        QueryOptions qo = new QueryOptions();
        // This assumes the Identity has an extended attribute with the SAME name.
        // If not, map '{{ attr }}' to the real identity attribute name before filtering.
        qo.addFilter(Filter.eq("{{ attr }}", value));

        List<Identity> identities = context.getObjects(Identity.class, qo);
        if (identities != null && !identities.isEmpty()) {
            correlatedIdentity = new HashMap<>();
            correlatedIdentity.put("identity", identities.get(0));  // or use "identityName"
            return correlatedIdentity; // short-circuit on first hit
        }
    }
}
{% endfor %}
// --- End Correlation Logic ---

// If no identity found, return null to fall back to configured/default correlation
return null;
